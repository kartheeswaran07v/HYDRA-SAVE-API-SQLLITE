# Generated by Django 4.2.5 on 2023-10-02 18:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='companyMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('companyName', models.CharField(max_length=300)),
                ('enterpiseId', models.CharField(max_length=45)),
                ('companyType', models.CharField(max_length=45)),
                ('billingAddress', models.CharField(max_length=500)),
                ('approved', models.BooleanField(help_text='1-True, 0-False')),
                ('pincode', models.BigIntegerField()),
                ('domain', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='domainMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=45)),
                ('types', models.BooleanField(help_text='1-True, 0-False')),
            ],
        ),
        migrations.CreateModel(
            name='graphScreens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('screenName', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='industryMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='languageMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('englishContent', models.CharField(max_length=45)),
                ('chineseContent', models.CharField(max_length=45)),
                ('spanishContent', models.CharField(max_length=45)),
                ('portugueseContent', models.CharField(max_length=45)),
                ('japaneseContent', models.CharField(max_length=45)),
                ('lang1Content', models.CharField(max_length=45)),
                ('lang2Content', models.CharField(max_length=45)),
                ('lang3Content', models.CharField(max_length=45)),
                ('lang4Content', models.CharField(max_length=45)),
                ('lang5Content', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('otp', models.BigIntegerField()),
                ('time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='passMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passName', models.CharField(max_length=45)),
                ('passNumber', models.IntegerField()),
                ('passUniqueId', models.CharField(default='PASS-<function uuid1 at 0x000001D25B96CD60>', max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='plantMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plantUniqueId', models.CharField(max_length=45, unique=True)),
                ('plantName', models.CharField(max_length=45)),
                ('description', models.CharField(max_length=300, null=True)),
                ('capacity', models.FloatField()),
                ('capacityUnit', models.CharField(max_length=45)),
                ('feedWaterSource', models.CharField(max_length=45)),
                ('application', models.CharField(max_length=45)),
                ('pretreatment', models.CharField(max_length=45)),
                ('modeOfInput', models.CharField(max_length=45, null=True)),
                ('reportFrequecy', models.IntegerField()),
                ('plantCreationDate', models.DateTimeField()),
                ('flUnit', models.CharField(max_length=45)),
                ('tempUnit', models.CharField(max_length=45)),
                ('chemicalConcUnit', models.CharField(max_length=45)),
                ('presUnit', models.CharField(max_length=45)),
                ('energyUnit', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='pricingParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameterType', models.CharField(max_length=45)),
                ('parameter', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='regionMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='roleMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='stageMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stageNumber', models.CharField(max_length=45)),
                ('isHybrid_if', models.BooleanField(help_text='1-True, 0-False')),
                ('elementsPerVessel_if', models.IntegerField()),
                ('numberOfVessels_if', models.IntegerField()),
                ('stageUniqueId', models.CharField(max_length=45, unique=True)),
                ('passId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='hydrasaveAPI.passmaster')),
            ],
        ),
        migrations.CreateModel(
            name='userMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emailID', models.CharField(max_length=300)),
                ('password', models.CharField(max_length=45)),
                ('firstName', models.CharField(max_length=45)),
                ('address', models.CharField(max_length=45)),
                ('city', models.CharField(max_length=45)),
                ('country', models.CharField(max_length=45)),
                ('pincode', models.BigIntegerField()),
                ('companyName', models.CharField(max_length=45)),
                ('designation', models.CharField(max_length=45)),
                ('isActive', models.BooleanField(help_text='1-True, 0-False')),
                ('remarks', models.CharField(max_length=45, null=True)),
                ('logo', models.ImageField(blank=True, upload_to='')),
                ('mobileNo', models.CharField(max_length=45)),
                ('industryId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.industrymaster')),
                ('regionID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.regionmaster')),
            ],
        ),
        migrations.CreateModel(
            name='transactionMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transactionId', models.CharField(max_length=45)),
                ('time', models.DateTimeField()),
                ('amount', models.FloatField()),
                ('transactionStatus', models.CharField(max_length=45)),
                ('paymentType', models.CharField(max_length=45)),
                ('description', models.CharField(max_length=45)),
                ('invoiceNumber', models.CharField(max_length=45)),
                ('plantId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.plantmaster')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.usermaster')),
            ],
        ),
        migrations.CreateModel(
            name='trainMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainName', models.CharField(max_length=45)),
                ('trainNumber', models.IntegerField()),
                ('trainUniqueId', models.CharField(default='TRAIN-<function uuid1 at 0x000001D25B96CD60>', max_length=45)),
                ('plantId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trains', to='hydrasaveAPI.plantmaster')),
            ],
        ),
        migrations.CreateModel(
            name='timeSeriesData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('turbidity', models.FloatField(blank=True, null=True)),
                ('sdi', models.FloatField(blank=True, null=True)),
                ('pH', models.FloatField(blank=True, null=True)),
                ('temperature', models.FloatField()),
                ('feedConc', models.FloatField()),
                ('permConc', models.FloatField()),
                ('rejectConc', models.FloatField(blank=True, null=True)),
                ('feedFlow', models.FloatField(blank=True, null=True)),
                ('permFlow', models.FloatField()),
                ('rejectFlow', models.FloatField()),
                ('permPres', models.FloatField()),
                ('feedPres', models.FloatField()),
                ('rejectPres', models.FloatField()),
                ('normSaltPassage', models.FloatField(blank=True, null=True)),
                ('normPermFlow', models.FloatField(blank=True, null=True)),
                ('normDP', models.FloatField(blank=True, null=True)),
                ('remarks', models.CharField(blank=True, max_length=500, null=True)),
                ('energy', models.FloatField(blank=True, null=True)),
                ('stageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ts_data', to='hydrasaveAPI.stagemaster')),
            ],
        ),
        migrations.CreateModel(
            name='stageUserRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.stagemaster')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.usermaster')),
            ],
        ),
        migrations.CreateModel(
            name='setPoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.FloatField()),
                ('high', models.FloatField()),
                ('highhigh', models.FloatField()),
                ('low', models.FloatField()),
                ('lowlow', models.FloatField()),
                ('parameter', models.CharField(max_length=45)),
                ('stageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.stagemaster')),
            ],
        ),
        migrations.CreateModel(
            name='reviewMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=1000)),
                ('date', models.DateField()),
                ('reviewById', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.usermaster')),
                ('stageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.stagemaster')),
            ],
        ),
        migrations.CreateModel(
            name='resourceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('energy', models.FloatField()),
                ('date', models.DateField()),
                ('dummyColumn1', models.CharField(max_length=45)),
                ('dummyColumn2', models.CharField(max_length=45)),
                ('stageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.stagemaster')),
            ],
        ),
        migrations.CreateModel(
            name='referenceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('remarks', models.CharField(max_length=45)),
                ('stageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.stagemaster')),
                ('timeSeriesDataId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.timeseriesdata')),
            ],
        ),
        migrations.CreateModel(
            name='preferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=45)),
                ('modeOfInput', models.CharField(max_length=45)),
                ('plantOrder', models.IntegerField()),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.usermaster')),
            ],
        ),
        migrations.CreateModel(
            name='plantUserRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isActive', models.BooleanField(help_text='1-True, 0-False')),
                ('plantId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.plantmaster')),
                ('roleId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.rolemaster')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.usermaster')),
            ],
        ),
        migrations.AddField(
            model_name='plantmaster',
            name='createdById',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.usermaster'),
        ),
        migrations.AddField(
            model_name='passmaster',
            name='trainId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passes', to='hydrasaveAPI.trainmaster'),
        ),
        migrations.CreateModel(
            name='parametersScreen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameterName', models.CharField(max_length=45)),
                ('config', models.CharField(max_length=45)),
                ('screenId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.graphscreens')),
            ],
        ),
        migrations.CreateModel(
            name='nittoUserMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.regionmaster')),
                ('roleId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.rolemaster')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.usermaster')),
            ],
        ),
        migrations.CreateModel(
            name='loginMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logInTime', models.DateTimeField()),
                ('logOutTime', models.DateTimeField()),
                ('IPAddress', models.CharField(max_length=45)),
                ('deviceType', models.CharField(max_length=45)),
                ('browserName', models.CharField(max_length=45)),
                ('browserVersion', models.CharField(max_length=45)),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.usermaster')),
            ],
        ),
        migrations.CreateModel(
            name='invitesMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emailId', models.CharField(max_length=300)),
                ('status', models.BooleanField(help_text='1-True, 0-False')),
                ('invitedById', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.usermaster')),
                ('plantId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.plantmaster')),
                ('roleId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.rolemaster')),
            ],
        ),
        migrations.AddField(
            model_name='graphscreens',
            name='stageUserRelId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.stageuserrelationship'),
        ),
        migrations.CreateModel(
            name='factorMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.FloatField()),
                ('parameterId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.pricingparameters')),
                ('regionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.regionmaster')),
            ],
        ),
        migrations.CreateModel(
            name='errorLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('errorType', models.CharField(max_length=45)),
                ('errorCode', models.CharField(max_length=45)),
                ('errorDescription', models.CharField(max_length=45)),
                ('time', models.DateTimeField()),
                ('status', models.BooleanField(help_text='1-True, 0-False')),
                ('resolutionDate', models.DateField()),
                ('stageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.stagemaster')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.usermaster')),
            ],
        ),
        migrations.CreateModel(
            name='enterpriseApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isRejected', models.BooleanField(help_text='1-True, 0-False')),
                ('remarks', models.CharField(max_length=45)),
                ('datetime', models.DateTimeField()),
                ('isApproved', models.CharField(max_length=45)),
                ('enterpriseId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.companymaster')),
                ('modifiedById', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.usermaster')),
            ],
        ),
        migrations.CreateModel(
            name='energyEfficienty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motorEff', models.FloatField()),
                ('pumpEff', models.FloatField()),
                ('vfdEff', models.FloatField()),
                ('stageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.stagemaster')),
            ],
        ),
        migrations.CreateModel(
            name='emailDraftMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formatNumber', models.IntegerField()),
                ('bccEmailAddress', models.CharField(max_length=45)),
                ('bodyContentId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_drafts_body', to='hydrasaveAPI.languagemaster')),
                ('subjectContentId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_drafts_subject', to='hydrasaveAPI.languagemaster')),
            ],
        ),
        migrations.CreateModel(
            name='elementMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elementName_if', models.CharField(max_length=45)),
                ('elementLocation_if', models.CharField(max_length=45)),
                ('stageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='hydrasaveAPI.stagemaster')),
            ],
        ),
        migrations.CreateModel(
            name='discountDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.FloatField()),
                ('period', models.CharField(max_length=45)),
                ('companyId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.companymaster')),
            ],
        ),
        migrations.CreateModel(
            name='deviceMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plcModel', models.CharField(max_length=45)),
                ('plcMake', models.CharField(max_length=45)),
                ('commType', models.CharField(max_length=45)),
                ('isActive', models.CharField(max_length=45)),
                ('plantId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.plantmaster')),
            ],
        ),
        migrations.CreateModel(
            name='deviceDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variableName', models.CharField(max_length=45)),
                ('registeredAddress', models.CharField(max_length=45)),
                ('dataType', models.CharField(max_length=45)),
                ('registerAddress2', models.CharField(blank=True, max_length=45, null=True)),
                ('deviceId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.devicemaster')),
                ('stageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.stagemaster')),
            ],
        ),
        migrations.CreateModel(
            name='contentMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeOfMessage', models.CharField(max_length=45)),
                ('buttons', models.CharField(max_length=45)),
                ('autoDissapear', models.BooleanField(help_text='1-True, 0-False')),
                ('languageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.languagemaster')),
            ],
        ),
        migrations.CreateModel(
            name='contactsMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=45)),
                ('email', models.CharField(max_length=45)),
                ('isSuperUserd', models.BooleanField(help_text='1-True, 0-False')),
                ('enterpriseId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.companymaster')),
            ],
        ),
        migrations.AddField(
            model_name='companymaster',
            name='createdById',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.usermaster'),
        ),
        migrations.AddField(
            model_name='companymaster',
            name='regionId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.regionmaster'),
        ),
        migrations.CreateModel(
            name='cipOrFlushing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pH', models.FloatField(blank=True, null=True)),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('recirculationTime', models.FloatField(blank=True, null=True)),
                ('soakingTime', models.FloatField(blank=True, null=True)),
                ('flushingTime', models.FloatField(blank=True, null=True)),
                ('comments', models.FloatField(blank=True, null=True)),
                ('stageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cips', to='hydrasaveAPI.stagemaster')),
            ],
        ),
        migrations.CreateModel(
            name='cipChemicals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chemicalName', models.CharField(max_length=200)),
                ('chemicalConc', models.FloatField()),
                ('cipId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.ciporflushing')),
            ],
        ),
        migrations.CreateModel(
            name='alarmMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alarmContent', models.CharField(max_length=45)),
                ('datetime', models.DateTimeField()),
                ('stageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.stagemaster')),
            ],
        ),
        migrations.CreateModel(
            name='subscriptions',
            fields=[
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('tier', models.IntegerField(blank=True, null=True)),
                ('transactionMaster_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='hydrasaveAPI.transactionmaster')),
                ('stageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrasaveAPI.stagemaster')),
            ],
        ),
    ]
